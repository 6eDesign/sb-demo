{"version":3,"file":"todo.js","sources":["../node_modules/simplebind.js/dist/simpleBind.esm.js","../src/lib/simplebindclass.js","../node_modules/simplebind-redux-devtools/dist/simplebind-redux-devtools.esm.js","../src/todo.js"],"sourcesContent":["const FIRST_IN_STRING = 'FIRST_IN_STRING';\r\nconst COLON_SEPARATED_SECOND_GROUP = 'COLON_SEPARATED_SECOND_GROUP';\r\nconst COLON_SEPARATED_THIRD_GROUP = 'COLON_SEPARATED_THIRD_GROUP';\n\nvar getType = function(variable) {\r\n  var type = typeof variable;\r\n  switch(type) {\r\n    case 'object':\r\n      if(variable == null) return 'null';\r\n      return variable instanceof Array ? 'array' : type;\r\n    default:\r\n      return type;\r\n  }\r\n};\r\n\r\nvar delay = (function(){\r\n  var timer = 0;\r\n  return function(callback, ms){\r\n    clearTimeout (timer);\r\n    timer = setTimeout(callback, ms);\r\n  };\r\n})();\r\n\r\nvar copyArrayWithoutReferences = function (arr) {\r\n  var toReturn = [];\r\n  for (var i = 0; i < arr.length; ++i) {\r\n    var type = getType(arr[i]);\r\n    switch (type) {\r\n      case 'object':\r\n        toReturn.push(extend({}, arr[i]));\r\n        break;\r\n      case 'array':\r\n        toReturn.push(copyArrayWithoutReferences(arr[i]));\r\n        break;\r\n      default:\r\n        toReturn.push(arr[i]);\r\n        break;\r\n    }\r\n  }\r\n  return toReturn;\r\n};\r\n\r\nvar extend = function() {\r\n  for (var i = 1, len = arguments.length; i < len; ++i) {\r\n    var src = arguments[i]\r\n      , target = arguments[0];\r\n    for (var key in src) {\r\n      var isArrayPresent = getType(src[key]) === 'array';\r\n      var simpleExtend = getType(target[key]) != 'object' && getType(src[key]) != 'object' && !isArrayPresent;\r\n      if (simpleExtend) {\r\n        target[key] = src[key];\r\n      } else {\r\n        target[key] = extend(typeof target[key] == 'undefined' ? { } : target[key],src[key]);\r\n        if (isArrayPresent) {\r\n          target[key] = copyArrayWithoutReferences(src[key]);\r\n        } else {\r\n          target[key] = extend(typeof target[key] == 'undefined' ? {} : target[key], src[key]);\r\n        }\r\n      }\r\n    }\r\n  }\r\n  return arguments.length ? arguments[0] : { };\r\n};\r\n\r\nvar getKeys = function(obj) {\r\n  if(Object.keys) {\r\n    return Object.keys(obj);\r\n  } else {\r\n    arr = [];\r\n    for(var key in obj) {\r\n      arr.push(key);\r\n    }\r\n    return arr;\r\n  }\r\n};\r\n\r\nvar getData = function(elem) {\r\n  var attrs, keys, data = { };\r\n  attrs = getAttrs(elem);\r\n  keys = getKeys(attrs);\r\n  for(var i=0; i < keys.length; ++i) {\r\n    if(keys[i].indexOf('data-') === 0) {\r\n      data[keys[i].substring(5,keys[i].length)] = attrs[keys[i]];\r\n    }\r\n  }\r\n  return data;\r\n};\r\n\r\nvar getAttrs = function(elem) {\r\n  var attrs, obj = {};\r\n  attrs = elem.attributes;\r\n  for(var i=0; i < attrs.length; ++i) {\r\n    var attr = attrs.item(i);\r\n    obj[attr.nodeName] = (attr.hasOwnProperty('value')) ? attr.value : attr.nodeValue;\r\n  }\r\n  return obj;\r\n};\r\n\r\n// A great function for setting object values\r\n// via a string with dot notation:\r\n// ex) set({x:{y:{z:2}}},'y.z',3)\r\n\r\n// set = function(obj,str,val) {\r\n//   str = str.split('.');\r\n//   while(str.length > 1) {\r\n//     obj = obj[str.shift()];\r\n//   }\r\n//   obj[str.shift()] = val;\r\n// };\r\n\r\n// let's modify this function to be able to\r\n// build an object so we could have SEO friendly\r\n// binds and so that people don't have to rush\r\n// to bind their objects immediately\r\nvar set = function(obj,str,val) {\r\n  str = str.split('.');\r\n  var finalProp = str.pop();\r\n  while(str.length) {\r\n    var key = str.shift();\r\n    obj[key] = typeof obj[key] == 'undefined' ? { } : obj[key];\r\n    obj = obj[key];\r\n  }\r\n  obj[finalProp] = val;\r\n};\r\n\r\n// Same as above but retrieves the value as a string or as an empty string\r\n// if not set:\r\nvar get = function(obj,str) {\r\n  if(str == '$base' || str === '') return obj;\r\n  str = str.split('.');\r\n  for(var i=0; i < str.length; ++i) {\r\n    if(str[i] == '$base') {\r\n      return obj;\r\n    } else if(obj == null) {\r\n      return '';\r\n    } else if(typeof obj[str[i]] == 'undefined') {\r\n      return '';\r\n    } else {\r\n      if(obj === null) {\r\n        return '';\r\n      } else {\r\n        obj = obj[str[i]];\r\n      }\r\n    }\r\n  }\r\n  return obj;\r\n};\r\n\r\nlet replaceObjNameInBindingStrSingular = (location,oldName,newName) => str => { \r\n  switch(location) { \r\n    case FIRST_IN_STRING: \r\n      str = str.replace(new RegExp(`^${oldName}(\\.)?`), `${newName}$1`);\r\n      return str; \r\n    case COLON_SEPARATED_SECOND_GROUP: \r\n      str = str.replace(new RegExp(`^([^:]+:)${oldName}(\\\\.)?`),`$1${newName}$2`);\r\n      return str; \r\n    case COLON_SEPARATED_THIRD_GROUP: \r\n      str = str.replace(new RegExp(`^([^:]+:[^:]+:)${oldName}(\\\\.)?`),`$1${newName}$2`);\r\n      return str; \r\n  }\r\n};\r\n\r\nfunction replaceObjNameInBindingStr(str,bindTypeOpts,oldName,newName) { \r\n  return str.split(',')\r\n            .map(replaceObjNameInBindingStrSingular(bindTypeOpts.objNameLocation,oldName,newName))\r\n            .join(','); \r\n}\r\n\r\nvar triggerEvent = function(elem,type){\r\n  if('createEvent' in document) {\r\n    var evt = document.createEvent('HTMLEvents');\r\n    evt.initEvent(type,false,true);\r\n    elem.dispatchEvent(evt);\r\n  } else {\r\n    elem.fireEvent('on' + type);\r\n  }\r\n};\n\nvar util = /*#__PURE__*/Object.freeze({\n  delay: delay,\n  extend: extend,\n  getKeys: getKeys,\n  getData: getData,\n  getAttrs: getAttrs,\n  set: set,\n  get: get,\n  replaceObjNameInBindingStr: replaceObjNameInBindingStr,\n  triggerEvent: triggerEvent\n});\n\nvar state = { \r\n  bindTypes: [ ], \r\n  bindTypeOpts: { }, \r\n  boundElems: { }, \r\n  boundObjects: { }, \r\n  boundObjectsLast: { }, \r\n  ready: false,\r\n  beforeReadyBindQueue: [ ], \r\n  autoReBinding: false, \r\n  autoReBindingQueue: { }, \r\n  plugins: []\r\n};\n\nvar d = document;\r\n\r\nvar init = function() { \r\n  domCollection();\r\n  state.ready = true; \r\n  if(state.beforeReadyBindQueue.length) { \r\n    for(var i=0; i < state.beforeReadyBindQueue.length; ++i) { \r\n      lib.bind(state.beforeReadyBindQueue[i].name,state.beforeReadyBindQueue[i].obj);\r\n    }\r\n  }\r\n}; \r\n\r\nvar domCollection = function(base,autoReBind=false) { \r\n  if(autoReBind) { \r\n    state.autoReBinding = true; \r\n    state.autoReBindingQueue = { }; \r\n  } \r\n  base = (typeof base == 'undefined') ? d : base;\r\n  var all = base.getElementsByTagName('*');\r\n  for(var i=0; i < all.length; ++i) {\r\n    var opts = getData(all[i]);\r\n    if(typeof opts['simplebindcollected'] == 'undefined') { \r\n      var foundBinding = false; \r\n      for(var j=0; j < state.bindTypes.length; ++j) { \r\n        if(typeof opts[state.bindTypes[j]] != 'undefined') { \r\n          if(!foundBinding) { \r\n            foundBinding = true;  \r\n            all[i].setAttribute('data-simplebindcollected','true'); \r\n          }\r\n          opts.bindType = state.bindTypes[j]; \r\n          state.bindTypeOpts[state.bindTypes[j]].collection(all[i],opts); \r\n        }\r\n      }\r\n    }\r\n  }\r\n  if(autoReBind) { \r\n    state.autoReBinding = false; \r\n    processAutoRebindingQueue(); \r\n  } \r\n}; \r\n\r\nvar processBoundElems = function(elems,obj,flush) { \r\n  flush = typeof flush == 'undefined' ? false : flush;\r\n  for(var i=0; i < elems.length; ++i) { \r\n    if(state.bindTypeOpts[elems[i].bindType].binding) { \r\n      state.bindTypeOpts[elems[i].bindType].binding(elems[i],obj,flush); \r\n    }\r\n  }\r\n}; \r\n\r\nvar processAutoRebindingQueue = function() { \r\n  for(var key in state.autoReBindingQueue) { \r\n    if(typeof state.boundObjects[key] != 'undefined') { \r\n      processBoundElems(state.autoReBindingQueue[key],state.boundObjects[key],true);\r\n    }\r\n  }\r\n}; \r\n\r\nvar processBindings = function(objName,obj) { \r\n  if(typeof state.boundObjectsLast[objName] == 'undefined') state.boundObjectsLast[objName] = { }; \r\n  state.boundObjects[objName] = obj; \r\n  if(typeof state.boundElems[objName] != 'undefined') { \r\n    processBoundElems(state.boundElems[objName],obj); \r\n    state.boundObjectsLast[objName] = extend({},obj);\r\n  }\r\n}; \r\n\r\nlet processPlugins = (lifecycleHook,...args) => {\r\n  switch(lifecycleHook) { \r\n    case 'preBind': \r\n    case 'postBind': \r\n      let [objName,obj] = args;\r\n      state.plugins.forEach(plugin => obj = typeof plugin[lifecycleHook] == 'function' \r\n        ? plugin[lifecycleHook].apply(null,args)\r\n        : obj\r\n      );\r\n      return obj;\r\n  }\r\n};\r\n\r\nd.addEventListener('DOMContentLoaded',function(){\r\n  init();\r\n}); \r\n\r\nvar lib = window.simpleBind || {}; \r\n\r\nlib.util = util;\r\n\r\nlib.getState = function() { \r\n  return state;\r\n}; \r\n\r\nlet defaultBindTypeOpts = { \r\n  binding: null\r\n}; \r\n\r\nlib.registerBindType = function(selector,opts) { \r\n  if(typeof state.bindTypeOpts[selector] == 'undefined') { \r\n    state.bindTypeOpts[selector] = { }; \r\n    state.bindTypes.push(selector); \r\n  }\r\n  extend(state.bindTypeOpts[selector],defaultBindTypeOpts,opts);\r\n}; \r\n\r\nlib.addToBoundElems = function(bindType,objName,configObj) { \r\n  configObj.bindType = bindType; \r\n  if(typeof state.boundElems[objName] == 'undefined') state.boundElems[objName] = []; \r\n  if(state.autoReBinding) { \r\n    if(typeof state.autoReBindingQueue[objName] == 'undefined') state.autoReBindingQueue[objName] = []; \r\n    state.autoReBindingQueue[objName].push(configObj);      \r\n  }\r\n  state.boundElems[objName].push(configObj); \r\n}; \r\n\r\nlib.recollectDOM = function(context,autoReBind) { \r\n  domCollection(context,autoReBind);\r\n}; \r\n\r\n\r\nlet pluginDefaults = { \r\n  preBind: null,\r\n  postBind: null,\r\n  name: ''\r\n}; \r\n\r\nlib.registerPlugin = (opts={}) => { \r\n  state.plugins.push(extend({},pluginDefaults,opts));\r\n}; \r\n\r\nlib.bind = function(objName,obj) {\r\n  if(typeof objName == 'string' && typeof obj != 'undefined') {\r\n    if(typeof state.boundElems[objName] == 'undefined') state.boundElems[objName] = [];\r\n    if(state.ready) { \r\n      obj = processPlugins('preBind',objName,obj); \r\n      processBindings(objName,obj);\r\n      obj = processPlugins('postBind',objName,obj);\r\n    } else { \r\n      state.beforeReadyBindQueue.push({name: objName, obj: obj});\r\n    }\r\n  }\r\n}; \r\n\r\nlib.extendNamespace = function(name,method) { \r\n  lib[name] = method;\r\n};\n\nvar collection = function(elem,opts){\r\n  // collection routine, the function that defines the object stored in boundElems\r\n  opts.simplebind = opts.simplebind.split('.');\r\n  var configObj = {\r\n    elem: elem,\r\n    objName: opts.simplebind.shift(),\r\n    objKey: opts.simplebind.join('.'),\r\n    opts: opts\r\n  };\r\n  lib.addToBoundElems('simplebind',configObj.objName,configObj);\r\n};\r\n\r\nvar binding = function(config,obj,flush){\r\n  // binding routine, the function that determines how binding is done for this bind type\r\n  var val = lib.util.get(obj,config.objKey);\r\n  var oldVal = lib.util.get(state.boundObjectsLast[config.objName],config.objKey);\r\n  if(val !== oldVal || flush) {\r\n    if(typeof config.opts['simplefilter'] != 'undefined') {\r\n      val = lib.getFilteredValue(val,config.opts.simplefilter);\r\n    }\r\n    val = typeof val == 'string' ? val : JSON.stringify(val,null,2);\r\n    if(typeof config.opts['simplebindhtml'] != 'undefined' && config.opts.simplebindhtml==\"true\") {\r\n      config.elem.innerHTML = val;\r\n    } else {\r\n      if(config.elem.childNodes.length) {\r\n        config.elem.childNodes[0].nodeValue = val;\r\n      } else {\r\n        config.elem.appendChild(document.createTextNode(val));\r\n      }\r\n    }\r\n  }\r\n};\r\n\r\n// uses default objNameRegex ('data-simplebind=\"objName.objKey\"')\r\nlib.registerBindType('simplebind',{\r\n  collection, \r\n  binding,\r\n  objNameLocation: FIRST_IN_STRING\r\n});\n\nstate.bindHandlers = { };\r\n\r\nvar collection$1 = function(elem,opts){\r\n  // collection routine, the function that defines the object stored in boundElems\r\n  var bindHandlers = opts.simplebindhandler.split(',');\r\n  for(var i=0; i < bindHandlers.length; ++i) {\r\n    bindHandlers[i] = bindHandlers[i].split(':');\r\n    var configObj = {\r\n      elem: elem,\r\n      handler: bindHandlers[i].shift()\r\n    };\r\n    bindHandlers[i] = bindHandlers[i].shift().split('.');\r\n    configObj.objName = bindHandlers[i].shift();\r\n    configObj.objKey = bindHandlers[i].join('.');\r\n    lib.addToBoundElems('simplebindhandler',configObj.objName,configObj);\r\n  }\r\n};\r\n\r\nvar binding$1 = function(config,obj,flush){\r\n  // binding routine, the function that determines how binding is done for this bind type\r\n  if(typeof state.bindHandlers[config.handler] != 'undefined') {\r\n    var val = lib.util.get(obj,config.objKey)\r\n      , oldVal = lib.util.get(state.boundObjectsLast[config.objName],config.objKey);\r\n    var change = typeof val == 'object' ? JSON.stringify(val) != JSON.stringify(oldVal) : val != oldVal;\r\n    if(change || flush) {\r\n      state.bindHandlers[config.handler](config.elem,lib.util.get(obj,config.objKey),config.objName);\r\n    }\r\n  }\r\n};\r\n\r\nvar registerBindHandler = function(handlerName,func) {\r\n  if(typeof func == 'function') {\r\n    state.bindHandlers[handlerName] = func;\r\n  }\r\n};\r\n\r\n\r\nlib.registerBindType('simplebindhandler', {\r\n  collection: collection$1,\r\n  binding: binding$1,\r\n  objNameLocation: COLON_SEPARATED_SECOND_GROUP\r\n});\r\nlib.extendNamespace('registerBindHandler', registerBindHandler);\n\n// define two flags that are used to help us determine flow/bubbling and prevent indefinite recursion: \r\n//  1. eventDispatchMarker: this is applied when we programatically trigger a change event on an input\r\n//  2. changeInitiatorMarker: this is applied to bindvalue input when it invokes a change \r\nvar eventDispatchMarker = 'data-simpleeventdispatch'\r\n  , changeInitiatorMarker = 'data-simplebindvaluechanger';\r\n\r\n/**\r\n * handleInput() is an event callback to handle changes to simplebindvalue-bound inputs\r\n */\r\nvar handleInput = function() {\r\n  // check if we are simply dispatching an event from the bindingRoutine callback\r\n  if(this.getAttribute(eventDispatchMarker)) return this.removeAttribute(eventDispatchMarker);\r\n  // we are not, we need to update other items that are bound to same object.property: \r\n  var binding = this.getAttribute('data-simplebindvalue').split('.')\r\n    , objName = binding.shift();\r\n  // in case this object hasn't been set yet, for whatever reason, set it to a blank object:\r\n  if(typeof state.boundObjects[objName] == 'undefined') state.boundObjects[objName] = {};\r\n  this.setAttribute(changeInitiatorMarker,'true');\r\n  lib.util.set(state.boundObjects[objName],binding.join('.'),getInputValue(this));\r\n  lib.bind(objName,state.boundObjects[objName]);\r\n  if(objName.indexOf('__repeat') > -1) {\r\n    var originalObjName = state.repeatDictionary[objName.split('-').shift()];\r\n    lib.bind(originalObjName,state.boundObjects[originalObjName]);\r\n  }\r\n};\r\n\r\nvar rateLimitInput = function() {\r\n  var elem = this;\r\n  lib.util.delay(function(){\r\n    handleInput.call(elem);\r\n  },50);\r\n};\r\n\r\nvar getInputType = function(elem) {\r\n  var type, tagName = elem.tagName.toLowerCase();\r\n  switch(tagName) {\r\n    case 'input':\r\n      type = elem.getAttribute('type');\r\n      return type;\r\n    default:\r\n      return tagName;\r\n  }\r\n};\r\n\r\nvar checkIfInputValueChanged = function(input,currVal) {\r\n  var type = getInputType(input);\r\n  // for checkboxes and radio inputs, it is necessary to account for \r\n  // string vs boolean comparisons since the value attribute on an \r\n  // input is always a string: \r\n  switch(type) {\r\n    case 'checkbox':\r\n      return String(input.checked) != String(currVal);\r\n      return false;\r\n    case 'radio':\r\n      var radioVal = getInputValue(input);\r\n      return (input.checked && radioVal != String(currVal)) || (!input.checked && radioVal == String(currVal));\r\n    default:\r\n      return currVal != getInputValue(input);\r\n  }\r\n};\r\n\r\nvar getInputValue = function(elem) {\r\n  var type = getInputType(elem);\r\n  switch(type) {\r\n    case 'checkbox':\r\n      return elem.checked;\r\n    default:\r\n      return elem.value;\r\n  }\r\n};\r\n\r\nvar attachAppropriateEventHandlers = function(elem,inputType) {\r\n  switch(inputType) {\r\n    case 'text':\r\n    case 'tel':\r\n    case 'password':\r\n    case 'textarea':\r\n    case 'number': \r\n    case 'email': \r\n    case 'zip':\r\n    case 'time':\r\n      elem.addEventListener('keyup',rateLimitInput);\r\n    default:\r\n      elem.addEventListener('change',handleInput);\r\n      break;\r\n  }\r\n};\r\n\r\nvar setValue = function(config,val) {\r\n  switch(config.inputType) {\r\n    case 'select':\r\n      var opts = config.elem.getElementsByTagName('option');\r\n      var selIndex = 0;\r\n      for(var i=0; i < opts.length; ++i) {\r\n        if(opts[i].value == val) {\r\n          selIndex = i;\r\n          break;\r\n        }\r\n      }\r\n      config.elem.selectedIndex = selIndex;\r\n      break;\r\n    case 'radio':\r\n      config.elem.checked = String(val) == config.elem.value;\r\n      break;\r\n    case 'checkbox':\r\n      config.elem.checked = (val === true || val == 'true');\r\n      break;\r\n    case 'textarea':\r\n      if(config.elem.innerHTML != val) {\r\n        config.elem.innerHTML = val;\r\n      }\r\n      break;\r\n    case 'text':\r\n    default:\r\n      if(val != config.elem.value || flush) {\r\n        config.elem.value = val;\r\n      }\r\n      break;\r\n  }\r\n};\r\n\r\nvar collection$2 = function(elem,opts){\r\n  // collection routine, the function that defines the object stored in boundElems\r\n  opts.simplebindvalue = opts.simplebindvalue.split('.');\r\n  var configObj = {\r\n    elem: elem,\r\n    objName: opts.simplebindvalue.shift(),\r\n    objKey: opts.simplebindvalue.join('.'),\r\n    inputType: getInputType(elem),\r\n    initiatedChange: false\r\n  };\r\n  attachAppropriateEventHandlers(elem,configObj.inputType);\r\n  lib.addToBoundElems('simplebindvalue',configObj.objName,configObj);\r\n};\r\n\r\nvar binding$2 = function(config,obj,flush){\r\n  // binding routine, the function that determines how binding is done for this bind type\r\n  var val = lib.util.get(obj,config.objKey);\r\n  if(checkIfInputValueChanged(config.elem,val)) {\r\n    // check if this is the element that invoked the change: \r\n    if(config.elem.getAttribute(changeInitiatorMarker)) {\r\n      config.elem.removeAttribute(changeInitiatorMarker);\r\n    } else {\r\n      // it wasn't, so we need to trigger a change event:\r\n      setValue(config,val);\r\n      config.elem.setAttribute(eventDispatchMarker,'true');\r\n      lib.util.triggerEvent(config.elem,'change');\r\n    }\r\n  } else {\r\n    if(config.elem.getAttribute(changeInitiatorMarker)) {\r\n      config.elem.removeAttribute(changeInitiatorMarker);\r\n    }\r\n  }\r\n};\r\n\r\n// uses default objNameRegex\r\n\r\nlib.registerBindType('simplebindvalue',{\r\n  collection: collection$2,\r\n  binding: binding$2,\r\n  objNameLocation: FIRST_IN_STRING\r\n});\n\nstate.repeatCount = 0;\r\nstate.repeatDictionary = { };\r\n\r\nvar getNewBindingName = function(config,count) {\r\n  return '__repeat' + config.repeatIndex + '-' + config.innerObjName + count;\r\n};\r\n\r\n/**\r\n * rewriteBindings() takes a list of elements and rewrites any simplebind binding\r\n * properties from a specified original object name to a specified new object name\r\n *\r\n * @param    {Array}     elems              Nodelist of elements to be processed\r\n * @param    {String}    originalObjName    Original objName to replace\r\n * @param    {String}    newObjName         New objName to replace original\r\n */\r\nvar rewriteBindings = function(elems,originalObjName,newObjName) {\r\n  for(var i=0; i < elems.length; ++i) {\r\n    for(var j=0; j < state.bindTypes.length; ++j) {\r\n      var attr = 'data-' + state.bindTypes[j]\r\n        , binding = elems[i].getAttribute(attr);\r\n      if(binding) {\r\n        var newBindingVal = lib.util.replaceObjNameInBindingStr(binding,state.bindTypeOpts[state.bindTypes[j]],originalObjName,newObjName);\r\n        if(newBindingVal != binding) {\r\n          elems[i].setAttribute(attr,newBindingVal);\r\n          elems[i].removeAttribute('data-simplebindcollected');\r\n        } else {\r\n          // If we have made it this far then the element had a binding string on it but it was\r\n          // not a member of the array that was bound.  nonetheless, it needs to be recollected\r\n          // and rebound\r\n          elems[i].removeAttribute('data-simplebindcollected');\r\n        }\r\n      }\r\n    }\r\n  }\r\n};\r\n\r\n/**\r\n * scaleRepeat takes a repeat block and scales the # of repeated elements up or down:\r\n *\r\n * @param    {Object}    config    simpleRepeat config object (stored in state.boundElems)\r\n * @param    {Number}    num       # of desired repeat elements\r\n */\r\nvar scaleRepeat = function(config,num) {\r\n  if(config.repeatedElems.length == num) return;\r\n  var delta;\r\n  if(config.repeatedElems.length < num) {\r\n    // need to add elems\r\n    delta = num - config.repeatedElems.length;\r\n    var frag = document.createDocumentFragment();\r\n    for(var i=0; i < delta; ++i) {\r\n      var newNode = config.repeatTemplate.cloneNode(true)\r\n        , innards = newNode.getElementsByTagName('*')\r\n        , origBind = getNewBindingName(config,0)\r\n        , newBind = getNewBindingName(config,config.repeatedElems.length);\r\n      // rebind the base-level node: \r\n      rewriteBindings([newNode],origBind,newBind);\r\n      // & then the children: \r\n      rewriteBindings(innards,origBind,newBind);\r\n      config.repeatedElems.push(newNode);\r\n      frag.appendChild(newNode);\r\n    }\r\n    config.elem.appendChild(frag);\r\n    lib.recollectDOM(config.elem,true);\r\n  } else {\r\n    // need to remove elems\r\n    delta = config.repeatedElems.length - num;\r\n    for(var i=0; i < delta; ++i) {\r\n      var removed = config.repeatedElems.pop();\r\n      var objName  = getNewBindingName(config,config.repeatedElems.length);\r\n      removed.parentNode.removeChild(removed);\r\n      if(typeof state.boundElems[objName] != 'undefined') delete state.boundElems[objName];\r\n      if(typeof state.boundObjects[objName] != 'undefined') delete state.boundObjects[objName];\r\n      if(typeof state.boundObjectsLast[objName] != 'undefined') delete state.boundObjectsLast[objName];\r\n    }\r\n  }\r\n};\r\n\r\nvar collection$3 = function(elem,opts){\r\n  // collection routine, the function that defines the object stored in boundElems\r\n  opts.simplerepeat = opts.simplerepeat.split(':');\r\n  var objNameAndKey = opts.simplerepeat.pop().split('.');\r\n  var configObj = {\r\n    elem: elem,\r\n    objName: objNameAndKey.shift(),\r\n    objKey: objNameAndKey.join('.'),\r\n    innerObjName: opts.simplerepeat.shift(),\r\n    repeatedElems: [ ],\r\n    repeatIndex: state.repeatCount\r\n  };\r\n  var innerNodes = elem.getElementsByTagName('*');\r\n  rewriteBindings(innerNodes,configObj.innerObjName,getNewBindingName(configObj,0));\r\n  configObj.repeatTemplate = innerNodes[0].parentNode.removeChild(innerNodes[0]);\r\n  state.repeatDictionary['__repeat' + configObj.repeatIndex] = configObj.objName;\r\n  ++state.repeatCount;\r\n  lib.addToBoundElems('simplerepeat',configObj.objName,configObj);\r\n};\r\n\r\nvar binding$3 = function(config,obj,flush){\r\n  // binding routine, the function that determines how binding is done for this bind type\r\n  var arrToBind = lib.util.get(obj,config.objKey) || [];\r\n  if(typeof arrToBind['length'] != 'undefined') {\r\n    scaleRepeat(config,arrToBind.length);\r\n    for(var i=0; i < arrToBind.length; ++i) {\r\n      lib.bind(getNewBindingName(config,i),arrToBind[i]);\r\n    }\r\n  }\r\n};\r\n\r\nlib.registerBindType('simplerepeat', {\r\n  collection: collection$3,\r\n  binding: binding$3,\r\n  objNameLocation: COLON_SEPARATED_SECOND_GROUP\r\n});\r\nlib.extendNamespace('rewriteBindings',rewriteBindings);\n\n/*\r\n\r\n  Events take the form: 'eventName:eventHandlerName:optionalObjName.key.key'\r\n    ex: 'click:myClickHandler:someObj.key.key2'\r\n    or\r\n    ex: 'click:myClickHandler'     // omitting the object &\r\n                                      key specifier if not needed\r\n\r\n  In above examples, 'myClickHandler' must be registered by calling:\r\n    ex: simpleBind.registerEvent('myClickHandler',function(event,value){});\r\n    or\r\n    ex: simpleBind.registerEvent('myClickHandler',function(event){});\r\n  respectively.\r\n\r\n  Multiple events can be specified as comma-separated values within\r\n  the data-simpleevent parameter.\r\n    ex: data-simpleevent=\"click:someEventHandler,hover:someOtherEventHandler\"\r\n\r\n  Whenever an event handler is called it will supply 'this' context to the\r\n  element which emitted the event. (this == element)\r\n\r\n*/\r\n\r\nstate.eventHandlers = { };\r\n\r\nvar addListener = function(elem,eventName,eventHandler,includeObjNameAndKey,objName,objKey) {\r\n  elem.addEventListener(eventName,function(evt){\r\n    if(typeof state.eventHandlers[eventHandler] != 'undefined') {\r\n      if(includeObjNameAndKey) {\r\n        if(typeof state.boundObjects[objName] != 'undefined') {\r\n          state.eventHandlers[eventHandler].call(this,evt, lib.util.get(state.boundObjects[objName],objKey));\r\n          return;\r\n        }\r\n      }\r\n      // still call the event handler even if it obj is undefined\r\n      return state.eventHandlers[eventHandler].call(this,evt,undefined);\r\n    }\r\n  });\r\n};\r\n\r\nvar collection$4 = function(elem,opts) {\r\n  var events = opts.simpleevent.split(',');\r\n  for(var i=0; i < events.length; ++i) {\r\n    var eventArr = events[i].split(':')\r\n      , eventName = eventArr.shift()\r\n      , eventHandler = eventArr.shift();\r\n    var objNameAndKey = eventArr.length ? eventArr.shift().split('.') : false;\r\n    if(objNameAndKey) {\r\n      var objName = objNameAndKey.shift()\r\n        , objKey = objNameAndKey.join('.');\r\n        addListener(elem,eventName,eventHandler,objNameAndKey,objName,objKey);\r\n    } else {\r\n      addListener(elem,eventName,eventHandler,objNameAndKey);\r\n    }\r\n  }\r\n};\r\n\r\nvar binding$4 = null;\r\n\r\nvar registerEvent = function(eventName,func) {\r\n  state.eventHandlers[eventName] = func;\r\n};\r\n\r\nlib.registerBindType('simpleevent',{\r\n  collection: collection$4,\r\n  binding: binding$4,\r\n  objNameLocation: COLON_SEPARATED_THIRD_GROUP\r\n});\r\nlib.extendNamespace('registerEvent', registerEvent);\n\nvar collection$5 = function(elem,opts){\r\n  // collection routine, the function that defines the object stored in boundElems\r\n  var boundAttrs = opts.simplebindattrs.split(',');\r\n  for(var i=0; i < boundAttrs.length; ++i) {\r\n    boundAttrs[i] =  boundAttrs[i].split(':');\r\n    var configObj = {\r\n      elem: elem,\r\n      attr: boundAttrs[i].shift()\r\n    };\r\n    boundAttrs[i] = boundAttrs[i].shift().split('.');\r\n    configObj.objName = boundAttrs[i].shift();\r\n    configObj.objKey = boundAttrs[i].join('.');\r\n    lib.addToBoundElems('simplebindattrs',configObj.objName,configObj);\r\n  }\r\n};\r\n\r\nvar binding$5 = function(config,obj,flush){\r\n  // binding routine, the function that determines how binding is done for this bind type\r\n  var val = lib.util.get(obj,config.objKey)\r\n    , oldVal = lib.util.get(state.boundObjectsLast[config.objName],config.objKey);\r\n  if(val != oldVal || flush) {\r\n    config.elem.setAttribute(config.attr,val);\r\n  }\r\n};\r\n\r\nlib.registerBindType('simplebindattrs',{\r\n  collection: collection$5,\r\n  binding: binding$5,\r\n  objNameLocation: COLON_SEPARATED_SECOND_GROUP\r\n});\n\n// takes form: data-simpledata=\"thisProp:objName.objKey,otherProp:objName.objKey\"\r\nvar collection$6 = function(elem,opts){\r\n  // collection routine, the function that defines the object stored in boundElems\r\n  var dataProps = opts.simpledata.split(',');\r\n  for(var i=0; i < dataProps.length; ++i) {\r\n    var arr = dataProps[i].split(':')\r\n      , prop = arr.shift();\r\n    arr = arr.shift().split('.');\r\n    var configObj = {\r\n      elem: elem,\r\n      objName: arr.shift(),\r\n      objKey: arr.join('.'),\r\n      prop: prop\r\n    };\r\n    lib.addToBoundElems('simpledata',configObj.objName,configObj);\r\n  }\r\n};\r\n\r\nvar binding$6 = function(config,obj){\r\n  // binding routine, the function that determines how binding is done for this bind type\r\n  var prop = 'data-' + config.prop.replace(/\\W+/g, '-').replace(/([a-z\\d])([A-Z])/g, '$1-$2');\r\n  config.elem.setAttribute(prop, lib.util.get(obj,config.objKey));\r\n};\r\n\r\nlib.registerBindType('simpledata',{\r\n  collection: collection$6,\r\n  binding: binding$6,\r\n  objNameLocation: COLON_SEPARATED_SECOND_GROUP\r\n});\n\nstate.filters = { };\r\n\r\nvar getFilteredValue = function(val,filterStr) {\r\n  filterStr = filterStr.split(',');\r\n  for(var i=0; i < filterStr.length; ++i) {\r\n    if(typeof state.filters[filterStr[i]] != 'undefined') {\r\n      val = state.filters[filterStr[i]](val);\r\n    }\r\n  }\r\n  return val;\r\n};\r\n\r\nvar registerFilter = function(filterName,fn) {\r\n  if(typeof fn == 'function') {\r\n    state.filters[filterName] = fn;\r\n  }\r\n};\r\n\r\nlib.extendNamespace('getFilteredValue',getFilteredValue);\r\nlib.extendNamespace('registerFilter',registerFilter);\n\nexport default lib;\n","import simpleBind from 'simplebind.js';\r\nlet { addToBoundElems, registerBindType } = simpleBind;\r\nlet state = simpleBind.getState();\r\n\r\n/**\r\n * Takes form: data-simplebindclass='a-class-name:objName.someBool,class-name2:objName.someBool2'\r\n * (when boolean is true, class name will be applied, otherwise removed)\r\n */\r\n\r\nlet conf = { \r\n  collection(elem,opts) { \r\n    opts.simplebindclass.split(',').forEach((str) => {\r\n      let classNames = str.match(/^([^:]+):/);\r\n      let objName = str.match(/:([^\\.]+)\\./);\r\n      let objKey = str.match(/:[^\\.]+\\.(.*)$/);\r\n      if(!classNames || !objName || !objKey) return;\r\n      let configObj = { \r\n        elem: elem,\r\n        classNames: classNames[1].split(/\\s+/), \r\n        objName: objName[1],\r\n        objKey: objKey[1]\r\n      };\r\n      addToBoundElems('simplebindclass',configObj.objName,configObj);\r\n    });\r\n  },\r\n  binding(config,obj,flush) { \r\n    let val = simpleBind.util.get(obj,config.objKey)\r\n      , oldVal = simpleBind.util.get(state.boundObjectsLast[config.objName],config.objKey);\r\n    if(val != oldVal || flush) {\r\n      config.elem.classList[val == true ? 'add' : 'remove'](...config.classNames);\r\n    }\r\n  },\r\n  objNameLocation: 'COLON_SEPARATED_SECOND_GROUP'\r\n};\r\n\r\nregisterBindType('simplebindclass',conf);","import simpleBind from 'simplebind.js';\n\nlet { bind, registerPlugin, util } = simpleBind;\r\nlet state = simpleBind.getState();\r\n\r\nconst useDevTools = typeof window.__REDUX_DEVTOOLS_EXTENSION__ != 'undefined'; \r\nlet devTools, isBindDueToDevTools = false;\r\nif(useDevTools) { \r\n  devTools = window.__REDUX_DEVTOOLS_EXTENSION__.connect({latency: 0});\r\n  devTools.subscribe((message,...args) => {\r\n    if (message.type === 'DISPATCH' && message.state) {\r\n      let newState = JSON.parse(message.state); \r\n      for(var key in newState) {\r\n        isBindDueToDevTools = true;\r\n        bind(key,newState[key]);\r\n      }\r\n    }\r\n  });\r\n}\r\n\r\nlet isARepeatKey = name => name.indexOf('__repeat') == 0;\r\n\r\nlet removeRepeatsFromState = obj => { \r\n  let newObj = util.extend({},state.boundObjects); \r\n  Object.keys(newObj).filter(isARepeatKey).forEach(k => delete newObj[k]);\r\n  return newObj;\r\n}; \r\n\r\nlet onBind = (objName,obj) => { \r\n  if(isARepeatKey(objName)) return; \r\n  var eligibleForDevTools = isBindDueToDevTools == false; \r\n  if(isBindDueToDevTools) isBindDueToDevTools = false;\r\n  if(!isARepeatKey(objName) && eligibleForDevTools) {\r\n    devTools.send(`${objName}-bound`, removeRepeatsFromState(state.boundObjects));\r\n  } \r\n  return obj;\r\n};\r\n\r\nregisterPlugin({\r\n  name: 'reduxDevToolsConnector',\r\n  postBind: onBind\r\n});\n","import simpleBind from 'simplebind.js';\r\nimport './lib/simplebindclass';\r\nimport 'simplebind-redux-devtools';\r\n\r\nvar todoObj = { \r\n\tnewItem: {\r\n\t\ttext: '', \r\n\t\tpriority: 'low'\r\n\t}, \r\n\ttasks: [ \r\n\t\t{ \r\n\t\t\tid: new Date().getTime(),\r\n\t\t\tdescription: 'use rollup to build simplebind.js', \r\n\t\t\tcompleted: true, \r\n\t\t\tpriority: 'high'\r\n\t\t}, { \r\n\t\t\tid: new Date().getTime() + 1,\r\n\t\t\tdescription: 'make it easier to create new simplebind bind types', \r\n\t\t\tcompleted: true, \r\n\t\t\tpriority: 'high'\r\n\t\t}, { \r\n\t\t\tid: new Date().getTime() + 2,\r\n\t\t\tdescription: 'use some es6 via buble', \r\n\t\t\tcompleted: true, \r\n\t\t\tpriority: 'high'\r\n\t\t}, { \r\n\t\t\tid: new Date().getTime() + 3,\r\n\t\t\tdescription: 'make simpleBind smaller with tree shaking', \r\n\t\t\tcompleted: true, \r\n\t\t\tpriority: 'high'\r\n\t\t}\r\n\t]\r\n}; \r\n\r\nsimpleBind.registerEvent('addNewItem',function(evt,newItem){\r\n\tevt.preventDefault();\r\n\tif(newItem.text) { \r\n\t\ttodoObj.tasks.push({\r\n\t\t\tid: new Date().getTime(),\r\n\t\t\tcompleted: false,\r\n\t\t\tpriority: newItem.priority,\r\n\t\t\tdescription: newItem.text\r\n\t\t}); \r\n\t\ttodoObj.newItem.text = '';\r\n\t\tsimpleBind.bind('todo',todoObj);\r\n\t}\r\n}); \r\n\r\nvar taskIs = (key,val) => task => task[key] === val;\r\nvar taskIsNot = (key,val) => task => task[key] !== val;\r\n\r\nsimpleBind.registerEvent('removeItem',function(evt,todoID){\r\n\tconsole.log('removing',todoObj);\r\n\ttodoObj.tasks = todoObj.tasks.filter(taskIsNot('id',todoID));\r\n\tsimpleBind.bind('todo',todoObj);\r\n});\r\n\r\nsimpleBind.registerEvent('removeCompleted',function(evt){\r\n\tlet initialCount = todoObj.tasks.length; \r\n\ttodoObj.tasks = todoObj.tasks.filter(taskIsNot('completed',true));\r\n\tif(initialCount != todoObj.tasks.length) simpleBind.bind('todo',todoObj);\r\n}); \r\n\r\nsimpleBind.registerBindHandler('taskCompletedHandler',function(elem,completed){\r\n\telem.className = completed ? 'complete' : ''; \r\n}); \r\n\r\nvar init = function(){ \r\n\tsimpleBind.bind('todo',todoObj); \r\n};\r\n\r\ndocument.addEventListener('DOMContentLoaded',init); "],"names":["const","timer","FIRST_IN_STRING","COLON_SEPARATED_SECOND_GROUP","COLON_SEPARATED_THIRD_GROUP","getType","variable","type","Array","delay","callback","ms","clearTimeout","setTimeout","copyArrayWithoutReferences","arr","toReturn","i","length","push","extend","len","arguments","src","target","key","isArrayPresent","simpleExtend","getKeys","obj","Object","keys","getData","elem","attrs","data","getAttrs","indexOf","substring","attributes","attr","item","nodeName","hasOwnProperty","value","nodeValue","util","freeze","set","str","val","finalProp","split","pop","shift","get","replaceObjNameInBindingStr","bindTypeOpts","oldName","newName","map","location","objNameLocation","replace","RegExp","join","triggerEvent","document","evt","createEvent","initEvent","dispatchEvent","fireEvent","state","bindTypes","boundElems","boundObjects","boundObjectsLast","ready","beforeReadyBindQueue","autoReBinding","autoReBindingQueue","plugins","d","domCollection","base","autoReBind","all","getElementsByTagName","opts","foundBinding","j","setAttribute","bindType","collection","processAutoRebindingQueue","processBoundElems","elems","flush","binding","processPlugins","lifecycleHook","forEach","plugin","apply","args","addEventListener","lib","bind","name","init","window","simpleBind","getState","let","defaultBindTypeOpts","registerBindType","selector","addToBoundElems","objName","configObj","recollectDOM","context","pluginDefaults","preBind","postBind","registerPlugin","extendNamespace","method","simplebind","objKey","config","getFilteredValue","simplefilter","JSON","stringify","simplebindhtml","innerHTML","childNodes","appendChild","createTextNode","bindHandlers","simplebindhandler","handler","oldVal","handlerName","func","eventDispatchMarker","changeInitiatorMarker","handleInput","this","getAttribute","removeAttribute","getInputValue","originalObjName","repeatDictionary","rateLimitInput","call","getInputType","tagName","toLowerCase","checked","simplebindvalue","inputType","initiatedChange","attachAppropriateEventHandlers","input","currVal","String","radioVal","checkIfInputValueChanged","selIndex","selectedIndex","setValue","repeatCount","getNewBindingName","count","repeatIndex","innerObjName","rewriteBindings","newObjName","newBindingVal","simplerepeat","objNameAndKey","repeatedElems","innerNodes","repeatTemplate","parentNode","removeChild","arrToBind","num","delta","frag","createDocumentFragment","newNode","cloneNode","innards","origBind","newBind","removed","scaleRepeat","eventHandlers","addListener","eventName","eventHandler","includeObjNameAndKey","undefined","events","simpleevent","eventArr","boundAttrs","simplebindattrs","dataProps","simpledata","prop","filters","filterStr","filterName","fn","simplebindclass","classNames","match","classList","ref","devTools","useDevTools","__REDUX_DEVTOOLS_EXTENSION__","isBindDueToDevTools","connect","latency","subscribe","message","newState","parse","isARepeatKey","newObj","eligibleForDevTools","send","filter","k","todoObj","newItem","text","priority","tasks","id","Date","getTime","description","completed","registerEvent","preventDefault","taskIsNot","task","todoID","console","log","initialCount","registerBindHandler","className"],"mappings":"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"}